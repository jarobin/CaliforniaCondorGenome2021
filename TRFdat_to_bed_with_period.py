#!/usr/bin/env python

# Adapted from https://github.com/hdashnow/TandemRepeatFinder_scripts/blob/master/TRFdat_to_bed.py
# Usage: TRFdat_to_bed_with_period.py --dat myfile.dat --bed myfile.bed
# Where myfile.dat is an existing output file generated by TRF and myfile.bed is the desired name of the output bed file

# License from the original:
# Copyright (c) 2014, Harriet Dashnow
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
# 
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# 
# * Neither the name of the {organization} nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

from argparse import (ArgumentParser, FileType)

def parse_args():
    "Parse the input arguments, use '-h' for help"
    parser = ArgumentParser(description='Convert Tandem Repeat Finder (TRF) dat file to bed format with repeat units for microsatellite genotyping')
    parser.add_argument(
        '--dat', type=str, required=True,
        help='Input dat file produced by Tandem Repeat Finder (TRF) using the -d option')
    parser.add_argument(
        '--bed', type=str, required=True,
        help='Output bed file containing genomic locations and repeat units of microsatellites.')

    return parser.parse_args() 

### Main
def main():
    # Parse command line arguments
    args = parse_args()
    datfile = args.dat
    bedfile = args.bed

    with open(bedfile, 'w') as bed:
        chrom = ""
        with open(datfile, 'r') as dat:
            for line in dat:
                splitline = line.split()
                if line.startswith("Sequence:"):
                    chrom = line.split()[1]
                else:
                    # Catch index errors when line is blank
                    try:
                        # Check if in header sequence (all non-header lines start with an int: start pos)
                        try:
                            int(splitline[0])
                        except ValueError:
                            continue
                        start = str(int(splitline[0])-1)
                        end = splitline[1]
                        period = splitline[2]
                        bed.write('\t'.join([chrom,start,end,period]) + '\n')
                    except IndexError:
                        pass

if __name__ == '__main__':
    main()


